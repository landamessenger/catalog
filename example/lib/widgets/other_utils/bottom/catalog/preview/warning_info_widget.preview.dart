/// AUTOGENERATED FILE. DO NOT EDIT

import 'package:catalog/catalog.dart';
import 'package:flutter/material.dart';
import 'package:example/widgets/other_utils/bottom/warning_info_widget.dart';
import '../dummy/warning_info_widget.dummy.dart';

@Preview(
  description: 'Basic warning info text for alert',
  parameters: ['infoText'],
)
class WarningInfoWidgetPreview extends ParentPreviewWidget {
  @override
  String get title => 'warning_info_widget';

  @override
  String get basePath => '/catalog';

  const WarningInfoWidgetPreview({super.key});

  @override
  Widget preview(BuildContext context) {
    Catalog().widgetBasicPreviewMap.clear();
    Catalog().widgetDevicePreviewMap.clear();

    if (WarningInfoWidgetDummy().dummies.isEmpty) {
      return Container();
    }

    final deviceScreenshotsAvailable =
        WarningInfoWidgetDummy().deviceScreenshotsAvailable;
    final screenshotsAvailable = WarningInfoWidgetDummy().screenshotsAvailable;

    int basicScreenshots = screenshotsAvailable - deviceScreenshotsAvailable;

    return ListView(
      children: [
        Column(
          children: [
            if (basicScreenshots > 0)
              Center(
                child: Container(
                  constraints: const BoxConstraints(
                    maxWidth: 400,
                  ),
                  child: Card(
                    clipBehavior: Clip.hardEdge,
                    child: Container(
                      padding: const EdgeInsets.all(15),
                      child: Row(
                        children: [
                          Expanded(
                            child: Center(
                              child: Text(
                                '$basicScreenshots basic screenshots available',
                              ),
                            ),
                          ),
                          const IconButton(
                            onPressed: processBasicScreenshots,
                            icon: Icon(
                              Icons.screenshot,
                            ),
                          )
                        ],
                      ),
                    ),
                  ),
                ),
              ),
            if (deviceScreenshotsAvailable > 0)
              Center(
                child: Container(
                  constraints: const BoxConstraints(
                    maxWidth: 400,
                  ),
                  child: Card(
                    clipBehavior: Clip.hardEdge,
                    child: Container(
                      padding: const EdgeInsets.all(15),
                      child: Row(
                        children: [
                          Expanded(
                            child: Center(
                              child: Text(
                                '$deviceScreenshotsAvailable device screenshots available',
                              ),
                            ),
                          ),
                          const IconButton(
                            onPressed: processDeviceScreenshots,
                            icon: Icon(
                              Icons.screenshot,
                            ),
                          )
                        ],
                      ),
                    ),
                  ),
                ),
              ),
            for (int i = 0; i < WarningInfoWidgetDummy().dummies.length; i++)
              PreviewBoundary(
                widgetKey: GlobalKey(),
                dummyBuilder: () => WarningInfoWidgetDummy().dummies[i],
                builder: (BuildContext context, Dummy dummy) {
                  return buildWarningInfoWidget(dummy);
                },
              ),
          ],
        )
      ],
    );
  }
}

WarningInfoWidget buildWarningInfoWidget(Dummy dummy) {
  return WarningInfoWidget(
    infoText: dummy.parameters['infoText'],
  );
}
